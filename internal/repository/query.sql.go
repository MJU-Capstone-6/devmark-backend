// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package repository

import (
	"context"
)

const create = `-- name: Create :one
INSERT INTO users (name) VALUES ($1) RETURNING id, name
`

func (q *Queries) Create(ctx context.Context, name string) (User, error) {
	row := q.db.QueryRow(ctx, create, name)
	var i User
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const findUserByID = `-- name: FindUserByID :one
SELECT id, name FROM users WHERE id = $1 LIMIT 1
`

func (q *Queries) FindUserByID(ctx context.Context, id int64) (User, error) {
	row := q.db.QueryRow(ctx, findUserByID, id)
	var i User
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
