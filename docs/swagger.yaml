basePath: /api/v1
definitions:
  category.CreateCategoryParam:
    properties:
      name:
        type: string
    type: object
  customerror.CustomError:
    properties:
      data: {}
      error_code:
        type: string
      msg:
        type: string
      status_code:
        type: integer
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  repository.Bookmark:
    properties:
      category_id:
        type: integer
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      id:
        type: integer
      link:
        type: string
      summary:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      workspace_id:
        type: integer
    type: object
  repository.Category:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      id:
        type: integer
      name:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
    type: object
  repository.CreateBookmarkParams:
    properties:
      category_id:
        type: integer
      link:
        type: string
      summary:
        type: string
      workspace_id:
        type: integer
    type: object
  repository.CreateInviteCodeParams:
    properties:
      code:
        type: string
      workspace_id:
        type: integer
    type: object
  repository.InviteCode:
    properties:
      code:
        type: string
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      expired_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      id:
        type: integer
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      workspace_id:
        type: integer
    type: object
  repository.UpdateBookmarkParams:
    properties:
      category_id:
        type: integer
      id:
        type: integer
      link:
        type: string
      summary:
        type: string
      workspace_id:
        type: integer
    type: object
  repository.UpdateCategoryParams:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  repository.UpdateWorkspaceParams:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  repository.User:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      id:
        type: integer
      provider:
        type: string
      refresh_token:
        type: integer
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      username:
        type: string
    type: object
  repository.UserWorkspaceView:
    properties:
      id:
        type: integer
      workspaces:
        items:
          $ref: '#/definitions/repository.Workspace'
        type: array
    type: object
  repository.Workspace:
    properties:
      bookmark_count:
        type: integer
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      user_count:
        type: integer
    type: object
  repository.WorkspaceUserCategory:
    properties:
      bookmark_count:
        type: integer
      categories:
        items:
          $ref: '#/definitions/repository.Category'
        type: array
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      user_count:
        type: integer
      users:
        items:
          $ref: '#/definitions/repository.User'
        type: array
    type: object
  responses.GetKakaoInfoResponse:
    properties:
      access_key:
        type: string
      refresh_token:
        type: string
    type: object
  workspace.CreateWorkspaceParam:
    properties:
      name:
        type: string
    type: object
  workspace.JoinWorkspaceParam:
    properties:
      code:
        type: string
    type: object
host: localhost
info:
  contact:
    email: sjlee990129@gmail.com
    name: MilkyMilky0116
    url: https://milkymilky0116.github.io
  description: Bookmark service with automatic classification.
  title: Devmark API
  version: "1.0"
paths:
  /api/v1/auth/kakao:
    post:
      consumes:
      - application/json
      description: retrive user info from kakao oauth. if user exists in our service,
        then return access token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetKakaoInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: retrive user info from kakao oauth
      tags:
      - auth
  /api/v1/bookmark:
    post:
      consumes:
      - application/json
      description: 북마크를 생성합니다.
      parameters:
      - description: Bookmark param
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.CreateBookmarkParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Bookmark'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 북마크 생성
      tags:
      - bookmark
  /api/v1/bookmark/:id:
    delete:
      consumes:
      - application/json
      description: 북마크를 삭제합니다.
      parameters:
      - description: Bookmark id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Bookmark'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 북마크 삭제
      tags:
      - bookmark
    get:
      consumes:
      - application/json
      description: 북마크를 조회합니다.
      parameters:
      - description: Bookmark id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Bookmark'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 북마크 조회
      tags:
      - bookmark
    put:
      consumes:
      - application/json
      description: 북마크를 업데이트 합니다.
      parameters:
      - description: Bookmark param
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.UpdateBookmarkParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Bookmark'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 북마크 업데이트
      tags:
      - bookmark
  /api/v1/category:
    post:
      consumes:
      - application/json
      description: 카테고리를 생성합니다. *워크스페이스에 카테고리를 등록하는 API는 따로 존재합니다.
      parameters:
      - description: body to create category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/category.CreateCategoryParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: Create Category
      tags:
      - category
  /api/v1/category/:id:
    delete:
      consumes:
      - application/json
      description: 카테고리를 삭제 합니다.
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: Delete Category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: 카테고리를 업데이트 합니다.
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      - description: body to update category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.UpdateCategoryParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: Update Category
      tags:
      - category
  /api/v1/invitecode:
    post:
      consumes:
      - application/json
      description: 워크스페이스의 초대코드를 생성합니다.
      parameters:
      - description: body to Generate Invite code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.CreateInviteCodeParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.InviteCode'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: Generate Invite Code from workspace
      tags:
      - invitecode
  /api/v1/user/:id/workspace:
    get:
      consumes:
      - application/json
      description: 유저가 참가한 워크스페이스의 리스트를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.UserWorkspaceView'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 유저가 참가한 워크스페이스의 리스트를 조회합니다.
      tags:
      - user
  /api/v1/workspace:
    post:
      consumes:
      - application/json
      description: 워크스페이스를 생성합니다.
      parameters:
      - description: Workspace id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/workspace.CreateWorkspaceParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Workspace'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 워크스페이스 생성
      tags:
      - workspace
  /api/v1/workspace/:id:
    delete:
      consumes:
      - application/json
      description: 워크스페이스를 삭제합니다.
      parameters:
      - description: Workspace id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Workspace'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 워크스페이스 삭제
      tags:
      - workspace
    get:
      consumes:
      - application/json
      description: 워크스페이스를 조회합니다.
      parameters:
      - description: Workspace id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.WorkspaceUserCategory'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 워크스페이스 조회
      tags:
      - workspace
    put:
      consumes:
      - application/json
      description: 워크스페이스 정보를 업데이트 합니다.
      parameters:
      - description: Workspace id
        in: path
        name: id
        required: true
        type: integer
      - description: Workspace info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.UpdateWorkspaceParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Workspace'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 워크스페이스 업데이트
      tags:
      - workspace
  /api/v1/workspace/:id/join:
    post:
      consumes:
      - application/json
      description: 워크스페이스에 참가합니다.
      parameters:
      - description: Workspace join info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/workspace.JoinWorkspaceParam'
      - description: Workspace id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Workspace'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customerror.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customerror.CustomError'
      summary: 워크스페이스 참가
      tags:
      - workspace
swagger: "2.0"
